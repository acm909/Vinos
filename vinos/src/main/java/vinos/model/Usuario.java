package vinos.model;

import java.util.Date;
/*import java.time.LocalDate;*/
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.NamedQuery;
import javax.persistence.NamedQueries;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;





/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name="usuario"
    ,catalog="tiendavinos"
    , uniqueConstraints = @UniqueConstraint(columnNames="email") 
)
@NamedQueries({
    @NamedQuery(name = "Usuario.findAll", query = "SELECT u FROM Usuario u"),
    @NamedQuery(name = "Usuario.findByIdusuario", query = "SELECT u FROM Usuario u WHERE u.idusuario = :idusuario"),
    @NamedQuery(name = "Usuario.findByRol", query = "SELECT u FROM Usuario u WHERE u.rol = :rol"),
    @NamedQuery(name = "Usuario.findByFechaalta", query = "SELECT u FROM Usuario u WHERE u.fechaalta = :fechaalta"),
    @NamedQuery(name = "Usuario.findByEmail", query = "SELECT u FROM Usuario u WHERE u.email = :email"),
    @NamedQuery(name = "Usuario.findByClave", query = "SELECT u FROM Usuario u WHERE u.clave = :clave"),
    @NamedQuery(name = "Usuario.findByActivo", query = "SELECT u FROM Usuario u WHERE u.activo = :activo"),
    @NamedQuery(name = "Usuario.findByUrlfoto", query = "SELECT u FROM Usuario u WHERE u.urlfoto = :urlfoto")})
public class Usuario  implements java.io.Serializable {

	private static final long serialVersionUID = 2863682542912837855L;
	private Integer idusuario;
     private String rol;
     private Date fechaalta;
     private String email;
     private String clave;
     private Boolean activo;
     private String urlfoto;
     private Set <Datospersonales> datospersonaleses = new HashSet<Datospersonales>(0);
     private Set <Compra>compras = new HashSet<Compra>(0);
     private Set <Valoraciones> valoracioneses = new HashSet<Valoraciones>(0);

    public Usuario() {
    }

	
    public Usuario(Date fechaalta, String email, String clave, String rol) {
        this.fechaalta = fechaalta;
        this.email = email;
        this.clave = clave;
        this.rol=rol;
    }
    public Usuario(String rol,Date fechaalta, String email, String clave, Boolean activo, String urlfoto, Set<Datospersonales> datospersonaleses, Set<Compra> compras, Set<Valoraciones> valoracioneses) {
       this.rol = rol;
       this.fechaalta = fechaalta;
       this.email = email;
       this.clave = clave;
       this.activo = activo;
       this.urlfoto = urlfoto;
       this.datospersonaleses = datospersonaleses;
       this.compras = compras;
       this.valoracioneses = valoracioneses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idusuario", unique=true, nullable=false)
    public Integer getIdusuario() {
        return this.idusuario;
    }
    
    public void setIdusuario(Integer idusuario) {
        this.idusuario = idusuario;
    }

    
    @Column(name="rol", length=45)
    public String getRol() {
        return this.rol;
    }
    
    public void setRol(String rol) {
        this.rol = rol;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="fechaalta", nullable=false, length=10)
    public Date getFechaalta() {
        return this.fechaalta;
    }
    
    public void setFechaalta(Date fechaalta) {
        this.fechaalta = fechaalta;
    }

    
    @Column(name="email", unique=true, nullable=false, length=60)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="clave", nullable=false, length=45)
    public String getClave() {
        return this.clave;
    }
    
    public void setClave(String clave) {
        this.clave = clave;
    }

    
    @Column(name="activo")
    public Boolean getActivo() {
        return this.activo;
    }
    
    public void setActivo(Boolean activo) {
        this.activo = activo;
    }

    
    @Column(name="urlfoto")
    public String getUrlfoto() {
        return this.urlfoto;
    }
    
    public void setUrlfoto(String urlfoto) {
        this.urlfoto = urlfoto;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<Datospersonales> getDatospersonaleses() {
        return this.datospersonaleses;
    }
    
    public void setDatospersonaleses(Set<Datospersonales> datospersonaleses) {
        this.datospersonaleses = datospersonaleses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<Compra> getCompras() {
        return this.compras;
    }
    
    public void setCompras(Set<Compra> compras) {
        this.compras = compras;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set <Valoraciones> getValoracioneses() {
        return this.valoracioneses;
    }
    
    public void setValoracioneses(Set<Valoraciones> valoracioneses) {
        this.valoracioneses = valoracioneses;
    }




}


